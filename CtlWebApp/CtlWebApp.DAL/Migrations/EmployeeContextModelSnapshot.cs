// <auto-generated />
using System;
using CtlWebApp.DAL.Common;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CtlWebApp.DAL.Migrations
{
    [DbContext(typeof(EmployeeContext))]
    partial class EmployeeContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.10")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CtlWebApp.Core.Cityes.City", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(40)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(40)");

                    b.Property<int?>("StateId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StateId");

                    b.ToTable("Citys");
                });

            modelBuilder.Entity("CtlWebApp.Core.People.Education", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateReceived")
                        .HasMaxLength(40)
                        .IsUnicode(true)
                        .HasColumnType("datetime2");

                    b.Property<int>("Educatuion")
                        .HasMaxLength(30)
                        .IsUnicode(true)
                        .HasColumnType("int");

                    b.Property<string>("FeildOfStudy")
                        .HasMaxLength(30)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Orientaion")
                        .HasMaxLength(200)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("PersonId")
                        .HasColumnType("int");

                    b.Property<int>("TotalAverage")
                        .HasMaxLength(2)
                        .IsUnicode(true)
                        .HasColumnType("int");

                    b.Property<string>("city")
                        .HasMaxLength(70)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(70)");

                    b.HasKey("Id");

                    b.HasIndex("PersonId");

                    b.ToTable("Educations");
                });

            modelBuilder.Entity("CtlWebApp.Core.People.Person", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Acceptenc")
                        .HasMaxLength(5)
                        .IsUnicode(true)
                        .HasColumnType("bit");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Avenue")
                        .HasMaxLength(50)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("BirthDate")
                        .HasMaxLength(40)
                        .IsUnicode(true)
                        .HasColumnType("datetime2");

                    b.Property<string>("BirthPlace")
                        .IsRequired()
                        .HasMaxLength(80)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(80)");

                    b.Property<DateTime>("DateOfDispatch")
                        .HasMaxLength(40)
                        .IsUnicode(true)
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasMaxLength(60)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("FirstName")
                        .HasMaxLength(50)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Gender")
                        .HasMaxLength(5)
                        .IsUnicode(true)
                        .HasColumnType("int");

                    b.Property<int>("IdentityNumber")
                        .HasMaxLength(10)
                        .IsUnicode(true)
                        .HasColumnType("int");

                    b.Property<byte[]>("Image")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("LastName")
                        .HasMaxLength(50)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("MartialStatus")
                        .HasMaxLength(8)
                        .IsUnicode(true)
                        .HasColumnType("int");

                    b.Property<string>("NameOfFather")
                        .HasMaxLength(50)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NationalCode")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.Property<string>("Number")
                        .HasMaxLength(7)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(7)");

                    b.Property<int>("PhoneNumber")
                        .HasMaxLength(11)
                        .IsUnicode(true)
                        .HasColumnType("int");

                    b.Property<DateTime>("Releasedate")
                        .HasMaxLength(40)
                        .IsUnicode(true)
                        .HasColumnType("datetime2");

                    b.Property<string>("Skill")
                        .HasMaxLength(200)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Street")
                        .HasMaxLength(70)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(70)");

                    b.Property<int>("VazifeState")
                        .HasColumnType("int");

                    b.Property<string>("VerficationCode")
                        .HasMaxLength(10)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("Id");

                    b.ToTable("People");
                });

            modelBuilder.Entity("CtlWebApp.Core.People.WorkHistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("EndDate")
                        .HasMaxLength(40)
                        .IsUnicode(true)
                        .HasColumnType("datetime2");

                    b.Property<string>("Jobtittle")
                        .HasMaxLength(100)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(100)");

                    b.Property<long>("LastRight")
                        .HasMaxLength(50)
                        .IsUnicode(true)
                        .HasColumnType("bigint");

                    b.Property<int?>("PersonId")
                        .HasColumnType("int");

                    b.Property<string>("ReasonForLeavingServeices")
                        .HasMaxLength(80)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(80)");

                    b.Property<DateTime>("StartDate")
                        .HasMaxLength(40)
                        .IsUnicode(true)
                        .HasColumnType("datetime2");

                    b.Property<string>("WorkPlaceName")
                        .HasMaxLength(70)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(70)");

                    b.HasKey("Id");

                    b.HasIndex("PersonId");

                    b.ToTable("WorkHistory");
                });

            modelBuilder.Entity("CtlWebApp.Core.States.State", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(40)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(40)");

                    b.HasKey("Id");

                    b.ToTable("States");
                });

            modelBuilder.Entity("CtlWebApp.Core.Cityes.City", b =>
                {
                    b.HasOne("CtlWebApp.Core.States.State", null)
                        .WithMany("City")
                        .HasForeignKey("StateId");
                });

            modelBuilder.Entity("CtlWebApp.Core.People.Education", b =>
                {
                    b.HasOne("CtlWebApp.Core.People.Person", null)
                        .WithMany("educationsHistory")
                        .HasForeignKey("PersonId");
                });

            modelBuilder.Entity("CtlWebApp.Core.People.WorkHistory", b =>
                {
                    b.HasOne("CtlWebApp.Core.People.Person", null)
                        .WithMany("workHistories")
                        .HasForeignKey("PersonId");
                });

            modelBuilder.Entity("CtlWebApp.Core.People.Person", b =>
                {
                    b.Navigation("educationsHistory");

                    b.Navigation("workHistories");
                });

            modelBuilder.Entity("CtlWebApp.Core.States.State", b =>
                {
                    b.Navigation("City");
                });
#pragma warning restore 612, 618
        }
    }
}
